/*******************************************************************************
 * Name: Java class SmStatusViewerTC.java
 * Project: PRISM Review Tool
 * Written by: Peter Ng, USGS, png@usgs.gov
 * 
 * This software is in the public domain because it contains materials that 
 * originally came from the United States Geological Survey, an agency of the 
 * United States Department of Interior. For more information, see the official 
 * USGS copyright policy at 
 * http://www.usgs.gov/visual-id/credit_usgs.html#copyright
 * 
 * Date: first release date Feb. 2015
 ******************************************************************************/

package gov.usgs.smapp.smtopcomponents;

import gov.usgs.smcommon.smutilities.SmGUIUtils;
import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JPopupMenu;
import javax.swing.JTextArea;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//gov.usgs.smapp.smtopcomponents//SmStatusViewerTC//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "SmStatusViewerTC",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "output", openAtStartup = true)
@ActionID(category = "Window", id = "gov.usgs.smapp.smtopcomponents.SmStatusViewerTC")
//@ActionReference(path = "Menu/Window" /*, position = 333 */)
@ActionReference(path = "Menu/Window", position = 250)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_SmStatusViewerTCAction",
        preferredID = "SmStatusViewerTC"
)
@Messages({
    "CTL_SmStatusViewerTCAction=Status Viewer",
    "CTL_SmStatusViewerTC=Status",
    "HINT_SmStatusViewerTC=Status Viewer"
})
public final class SmStatusViewerTC extends TopComponent {

    private final JPopupMenu editPopupMenu = SmGUIUtils.createCCPPopupMenu();
    private final TextFieldMouseListener textFieldMouseListener = 
        new TextFieldMouseListener();
    
    public SmStatusViewerTC() {
        initComponents();
        setName(Bundle.CTL_SmStatusViewerTC());
        setToolTipText(Bundle.HINT_SmStatusViewerTC());
        
        initTextArea();
//        initScrollPane();
    }
    
    public void clear() {
        this.txtareaStatus.setText("");
    }
    
    public void appendText(String text) {
        this.txtareaStatus.append(text);
    }
    
    public void initScrollPane() {
        this.jScrollPane1.getVerticalScrollBar().addAdjustmentListener(new AdjustmentListener() {
            public void adjustmentValueChanged(AdjustmentEvent e) {
                e.getAdjustable().setValue(e.getAdjustable().getMaximum());
            }
        });
    }
    
    public void initTextArea() {
        this.txtareaStatus.addMouseListener(textFieldMouseListener);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtareaStatus = new javax.swing.JTextArea();

        txtareaStatus.setColumns(20);
        txtareaStatus.setRows(5);
        jScrollPane1.setViewportView(txtareaStatus);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtareaStatus;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
    
    private class TextFieldMouseListener extends MouseAdapter {
        
        @Override
        public void mouseReleased(MouseEvent e) {
            if (e.isPopupTrigger()) {
                Object source = e.getSource();
                if (source instanceof JTextArea) {
                    JTextArea field = (JTextArea)source;
                    editPopupMenu.show(field,e.getX(),e.getY());
                }
            }
        }
    }
}
