/*******************************************************************************
 * Name: Java class SmPreferencesDialog.java
 * Project: PRISM Review Tool
 * Written by: Peter Ng, USGS, png@usgs.gov
 * 
 * This software is in the public domain because it contains materials that 
 * originally came from the United States Geological Survey, an agency of the 
 * United States Department of Interior. For more information, see the official 
 * USGS copyright policy at 
 * http://www.usgs.gov/visual-id/credit_usgs.html#copyright
 * 
 * Date: first release date Feb. 2015
 ******************************************************************************/

package gov.usgs.smapp.smdialogs;

import com.quinncurtis.chart2djava.ChartConstants;
import gov.usgs.smapp.SmCore;
import gov.usgs.smcommon.smclasses.SmPreferences;
import gov.usgs.smcommon.smclasses.SmPreferences.MarkerStyle;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import org.openide.windows.WindowManager;

/**
 *
 * @author png
 */
@SuppressWarnings({"rawtypes","unchecked"})
public class SmPreferencesDialog extends javax.swing.JDialog {

    private static boolean returnVal = false;
    private SimpleAttributeSet fontAttributes = new SimpleAttributeSet();
    private final ColorButtonMouseListener colorListener = new ColorButtonMouseListener();
    
    
    /**
     * Creates new form SmPreferencesDialog
     * @param parent
     * @param modal
     */
    public SmPreferencesDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        populateMarkerStyleLists();
        populateMarkerWidthLists();
        
        initializeSettings();
        
        setLocationRelativeTo(parent);
    }
    
    public boolean showDialog()
    {
        this.setVisible(true);
        return returnVal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlGeneral = new javax.swing.JPanel();
        lblEventsRootDir = new javax.swing.JLabel();
        txtEventsRootDir = new javax.swing.JTextField();
        btnEventsRootDir = new javax.swing.JButton();
        lblTrashDir = new javax.swing.JLabel();
        txtTrashDir = new javax.swing.JTextField();
        btnTrashDir = new javax.swing.JButton();
        lblLogsDir = new javax.swing.JLabel();
        txtLogsDir = new javax.swing.JTextField();
        btnLogsDir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblTemplatesRootDir = new javax.swing.JLabel();
        txtTemplatesRootDir = new javax.swing.JTextField();
        btnTemplatesRootDir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtStationFolderName = new javax.swing.JTextField();
        lblTemplate = new javax.swing.JLabel();
        txtTemplate = new javax.swing.JTextField();
        pnlPrismParams = new javax.swing.JPanel();
        lblDifferentialOrder = new javax.swing.JLabel();
        cboxDifferentialOrder = new javax.swing.JComboBox<>();
        lblButterworthFilterOrder = new javax.swing.JLabel();
        cboxButterworthFilterOrder = new javax.swing.JComboBox();
        lblButterworthFilterTaperLength = new javax.swing.JLabel();
        txtButterworthFilterTaperLength = new javax.swing.JTextField();
        lblStrongMotionThresholdPcnt = new javax.swing.JLabel();
        txtStrongMotionThresholdPcnt = new javax.swing.JTextField();
        pnlSmSeismicChartEditor = new javax.swing.JPanel();
        pnlFunctionRange = new javax.swing.JPanel();
        lblFunctionRangeStart = new javax.swing.JLabel();
        lblFunctionRangeStop = new javax.swing.JLabel();
        lblFunctionRangeStartMarkerColor = new javax.swing.JLabel();
        txtFunctionRangeStartMarkerColor = new javax.swing.JTextField();
        lblFunctionRangeStopMarkerColor = new javax.swing.JLabel();
        txtFunctionRangeStopMarkerColor = new javax.swing.JTextField();
        ftxtFunctionRangeStart = new javax.swing.JFormattedTextField();
        ftxtFunctionRangeStop = new javax.swing.JFormattedTextField();
        lblFunctionRangeStartMarkerStyle = new javax.swing.JLabel();
        cboxFunctionRangeStartMarkerStyle = new javax.swing.JComboBox();
        lblFunctionRangeStartMarkerWidth = new javax.swing.JLabel();
        spinnerFunctionRangeStartMarkerWidth = new javax.swing.JSpinner();
        lblFunctionRangeStopMarkerStyle = new javax.swing.JLabel();
        cboxFunctionRangeStopMarkerStyle = new javax.swing.JComboBox();
        lblFunctionRangeStopMarkerWidth = new javax.swing.JLabel();
        spinnerFunctionRangeStopMarkerWidth = new javax.swing.JSpinner();
        lblBaselineFunction = new javax.swing.JLabel();
        lblBaselineFunctionStyle = new javax.swing.JLabel();
        cboxBaselineFunctionStyle = new javax.swing.JComboBox();
        lblBaselineFunctionColor = new javax.swing.JLabel();
        txtBaselineFunctionColor = new javax.swing.JTextField();
        lblBaselineFunctionWidth = new javax.swing.JLabel();
        spinnerBaselineFunctionWidth = new javax.swing.JSpinner();
        pnlApplicationRange = new javax.swing.JPanel();
        lblApplicationRangeStart = new javax.swing.JLabel();
        lblApplicationRangeStop = new javax.swing.JLabel();
        lblApplicationRangeStartMarkerColor = new javax.swing.JLabel();
        txtApplicationRangeStartMarkerColor = new javax.swing.JTextField();
        lblApplicationRangeStopMarkerColor = new javax.swing.JLabel();
        txtApplicationRangeStopMarkerColor = new javax.swing.JTextField();
        ftxtApplicationRangeStart = new javax.swing.JFormattedTextField();
        ftxtApplicationRangeStop = new javax.swing.JFormattedTextField();
        lblApplicationRangeStartMarkerStyle = new javax.swing.JLabel();
        cboxApplicationRangeStartMarkerStyle = new javax.swing.JComboBox();
        lblApplicationRangeStopMarkerStyle = new javax.swing.JLabel();
        cboxApplicationRangeStopMarkerStyle = new javax.swing.JComboBox();
        lblApplicationRangeStartMarkerWidth = new javax.swing.JLabel();
        spinnerApplicationRangeStartMarkerWidth = new javax.swing.JSpinner();
        lblApplicationRangeStopMarkerWidth = new javax.swing.JLabel();
        spinnerApplicationRangeStopMarkerWidth = new javax.swing.JSpinner();
        pnlSeismicFilterRange = new javax.swing.JPanel();
        lblSeismicFunctionRangeLow = new javax.swing.JLabel();
        ftxtSeismicFilterRangeLow = new javax.swing.JFormattedTextField();
        lblSeismicFilterRangeHigh = new javax.swing.JLabel();
        ftxtSeismicFilterRangeHigh = new javax.swing.JFormattedTextField();
        pnlEvent = new javax.swing.JPanel();
        lblEventOnset = new javax.swing.JLabel();
        ftxtEventOnset = new javax.swing.JFormattedTextField();
        lblEventOnsetMarkerColor = new javax.swing.JLabel();
        txtEventOnsetMarkerColor = new javax.swing.JTextField();
        lblEventOnsetMarkerStyle = new javax.swing.JLabel();
        cboxEventOnsetMarkerStyle = new javax.swing.JComboBox();
        lblEventOnsetMarkerWidth = new javax.swing.JLabel();
        spinnerEventOnsetMarkerWidth = new javax.swing.JSpinner();
        pnlSmSpectralChartEditor = new javax.swing.JPanel();
        pnlFilterRange = new javax.swing.JPanel();
        lblSpectralFilterRangeLow = new javax.swing.JLabel();
        lblSpectralFilterRangeHigh = new javax.swing.JLabel();
        lblFilterRangeLowMarkerColor = new javax.swing.JLabel();
        txtFilterRangeLowMarkerColor = new javax.swing.JTextField();
        lblFilterRangeHighMarkerColor = new javax.swing.JLabel();
        txtFilterRangeHighMarkerColor = new javax.swing.JTextField();
        ftxtSpectralFilterRangeLow = new javax.swing.JFormattedTextField();
        ftxtSpectralFilterRangeHigh = new javax.swing.JFormattedTextField();
        lblFilterRangeLowMarkerStyle = new javax.swing.JLabel();
        cboxFilterRangeLowMarkerStyle = new javax.swing.JComboBox();
        lblFilterRangeLowMarkerWidth = new javax.swing.JLabel();
        spinnerFilterRangeLowMarkerWidth = new javax.swing.JSpinner();
        lblFilterRangeHighMarkerStyle = new javax.swing.JLabel();
        cboxFilterRangeHighMarkerStyle = new javax.swing.JComboBox();
        lblFilterRangeHighMarkerWidth = new javax.swing.JLabel();
        spinnerFilterRangeHighMarkerWidth = new javax.swing.JSpinner();
        pnlSmTrimTool = new javax.swing.JPanel();
        lblStartTime = new javax.swing.JLabel();
        lblStopTime = new javax.swing.JLabel();
        ftxtStartTime = new javax.swing.JFormattedTextField();
        ftxtStopTime = new javax.swing.JFormattedTextField();
        lblStartTimeMarkerStyle = new javax.swing.JLabel();
        lblStopTimeMarkerStyle = new javax.swing.JLabel();
        cboxStartTimeMarkerStyle = new javax.swing.JComboBox();
        cboxStopTimeMarkerStyle = new javax.swing.JComboBox();
        lblStartTimeMarkerColor = new javax.swing.JLabel();
        lblStopTimeMarkerColor = new javax.swing.JLabel();
        txtStartTimeMarkerColor = new javax.swing.JTextField();
        txtStopTimeMarkerColor = new javax.swing.JTextField();
        lblStartTimeMarkerWidth = new javax.swing.JLabel();
        lblStopTimeMarkerWidth = new javax.swing.JLabel();
        spinnerStartTimeMarkerWidth = new javax.swing.JSpinner();
        spinnerStopTimeMarkerWidth = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        lblDateTimeEqualTextColor = new javax.swing.JLabel();
        lblDateTimeUnequalTextColor = new javax.swing.JLabel();
        txtDateTimeEqualTextColor = new javax.swing.JTextField();
        txtDateTimeUnequalTextColor = new javax.swing.JTextField();
        pnlChartOptions = new javax.swing.JPanel();
        pnlChartSize = new javax.swing.JPanel();
        pnlChartSizeGroup = new javax.swing.JPanel();
        lblChartSizeGroupWidth = new javax.swing.JLabel();
        txtChartSizeGroupWidth = new javax.swing.JTextField();
        lblChartSizeGroupHeight = new javax.swing.JLabel();
        txtChartSizeGroupHeight = new javax.swing.JTextField();
        pnlChartSizeSingle = new javax.swing.JPanel();
        lblChartSizeSingleWidth = new javax.swing.JLabel();
        txtChartSizeSingleWidth = new javax.swing.JTextField();
        lblChartSizeSingleHeight = new javax.swing.JLabel();
        txtChartSizeSingleHeight = new javax.swing.JTextField();
        chkboxDisplayLegend = new javax.swing.JCheckBox();
        chkboxDisplayPlotLabels = new javax.swing.JCheckBox();
        pnlPlotAreaPosition = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtPlotAreaPositionTop = new javax.swing.JTextField();
        txtPlotAreaPositionLeft = new javax.swing.JTextField();
        txtPlotAreaPositionBottom = new javax.swing.JTextField();
        txtPlotAreaPositionRight = new javax.swing.JTextField();
        chkboxDisplayXGrid = new javax.swing.JCheckBox();
        chkboxDisplayYGrid = new javax.swing.JCheckBox();
        chkboxDisplayXAxisTitle = new javax.swing.JCheckBox();
        chkboxDisplayYAxisTitle = new javax.swing.JCheckBox();
        chkboxDisplayXAxisLabels = new javax.swing.JCheckBox();
        chkboxDisplayYAxisLabels = new javax.swing.JCheckBox();
        pnlColorScheme = new javax.swing.JPanel();
        lblForegroundColor = new javax.swing.JLabel();
        txtColorForeground = new javax.swing.JTextField();
        lblColorBackground = new javax.swing.JLabel();
        txtColorBackground = new javax.swing.JTextField();
        lblColorPlot = new javax.swing.JLabel();
        txtColorPlot = new javax.swing.JTextField();
        pnlFont = new javax.swing.JPanel();
        lblFont = new javax.swing.JLabel();
        btnFont = new javax.swing.JButton();
        chkboxDisplayPlotAnnotation = new javax.swing.JCheckBox();
        btnCancel = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Preferences");

        lblEventsRootDir.setText("Events Root Directory");
        lblEventsRootDir.setToolTipText("Directory containing event folders");

        btnEventsRootDir.setText("Browse");
        btnEventsRootDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEventsRootDirActionPerformed(evt);
            }
        });

        lblTrashDir.setText("Trash Directory");
        lblTrashDir.setToolTipText("Directory containing overriden or deleted files");

        txtTrashDir.setToolTipText("");

        btnTrashDir.setText("Browse");
        btnTrashDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrashDirActionPerformed(evt);
            }
        });

        lblLogsDir.setText("Logs Directory");
        lblLogsDir.setToolTipText("Directory containing templates used for charting");

        btnLogsDir.setText("Browse");
        btnLogsDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogsDirActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Templates"));

        lblTemplatesRootDir.setText("Templates Root Directory");
        lblTemplatesRootDir.setToolTipText("Directory containing templates used for charting");

        txtTemplatesRootDir.setEnabled(false);

        btnTemplatesRootDir.setText("Edit");
        btnTemplatesRootDir.setToolTipText("");
        btnTemplatesRootDir.setPreferredSize(new java.awt.Dimension(67, 23));
        btnTemplatesRootDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTemplatesRootDirActionPerformed(evt);
            }
        });

        jLabel1.setText("Station Folder Name:");

        txtStationFolderName.setEnabled(false);

        lblTemplate.setText("Template:");

        txtTemplate.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStationFolderName, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lblTemplate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTemplate, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTemplatesRootDir, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTemplatesRootDir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTemplatesRootDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTemplatesRootDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTemplatesRootDir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTemplatesRootDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtStationFolderName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemplate)
                    .addComponent(txtTemplate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlGeneralLayout = new javax.swing.GroupLayout(pnlGeneral);
        pnlGeneral.setLayout(pnlGeneralLayout);
        pnlGeneralLayout.setHorizontalGroup(
            pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblLogsDir)
                        .addComponent(lblTrashDir)
                        .addGroup(pnlGeneralLayout.createSequentialGroup()
                            .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtLogsDir, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                                .addComponent(txtTrashDir))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnTrashDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLogsDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(lblEventsRootDir)
                        .addGroup(pnlGeneralLayout.createSequentialGroup()
                            .addComponent(txtEventsRootDir, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnEventsRootDir)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        pnlGeneralLayout.setVerticalGroup(
            pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblEventsRootDir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEventsRootDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEventsRootDir))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblLogsDir)
                .addGap(3, 3, 3)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLogsDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogsDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTrashDir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTrashDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTrashDir))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("General Settings", pnlGeneral);

        lblDifferentialOrder.setText("Differential Order:");

        cboxDifferentialOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "5", "7", "9" }));
        cboxDifferentialOrder.setSelectedIndex(1);

        org.openide.awt.Mnemonics.setLocalizedText(lblButterworthFilterOrder, "Butterworth Filter Order:");

        cboxButterworthFilterOrder.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16" }));
        cboxButterworthFilterOrder.setToolTipText("");

        lblButterworthFilterTaperLength.setText("Butterworth Filter Taper Length (seconds):");

        lblStrongMotionThresholdPcnt.setText("Strong Motion Threshold Percent:");

        javax.swing.GroupLayout pnlPrismParamsLayout = new javax.swing.GroupLayout(pnlPrismParams);
        pnlPrismParams.setLayout(pnlPrismParamsLayout);
        pnlPrismParamsLayout.setHorizontalGroup(
            pnlPrismParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrismParamsLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlPrismParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPrismParamsLayout.createSequentialGroup()
                        .addComponent(lblStrongMotionThresholdPcnt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStrongMotionThresholdPcnt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPrismParamsLayout.createSequentialGroup()
                        .addComponent(lblButterworthFilterTaperLength)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtButterworthFilterTaperLength, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPrismParamsLayout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(cboxButterworthFilterOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblButterworthFilterOrder)
                    .addGroup(pnlPrismParamsLayout.createSequentialGroup()
                        .addComponent(lblDifferentialOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboxDifferentialOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPrismParamsLayout.setVerticalGroup(
            pnlPrismParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrismParamsLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnlPrismParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblButterworthFilterOrder)
                    .addComponent(cboxButterworthFilterOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPrismParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblButterworthFilterTaperLength)
                    .addComponent(txtButterworthFilterTaperLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPrismParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDifferentialOrder)
                    .addComponent(cboxDifferentialOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPrismParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStrongMotionThresholdPcnt)
                    .addComponent(txtStrongMotionThresholdPcnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(317, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("PRISM Parameters", pnlPrismParams);

        pnlFunctionRange.setBorder(javax.swing.BorderFactory.createTitledBorder("Function Range"));

        lblFunctionRangeStart.setText("Start:");
        lblFunctionRangeStart.setToolTipText("Function start time (seconds)");

        lblFunctionRangeStop.setText("Stop:");
        lblFunctionRangeStop.setToolTipText("Function stop time (seconds)");

        lblFunctionRangeStartMarkerColor.setText("Color:");
        lblFunctionRangeStartMarkerColor.setToolTipText("Marker color");

        txtFunctionRangeStartMarkerColor.setEditable(false);
        txtFunctionRangeStartMarkerColor.setToolTipText("Click to edit color");

        lblFunctionRangeStopMarkerColor.setText("Color:");
        lblFunctionRangeStopMarkerColor.setToolTipText("Marker color");

        txtFunctionRangeStopMarkerColor.setEditable(false);
        txtFunctionRangeStopMarkerColor.setToolTipText("Click to edit color");

        ftxtFunctionRangeStart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.####"))));
        ftxtFunctionRangeStart.setToolTipText("Function start time (seconds)");

        ftxtFunctionRangeStop.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.####"))));
        ftxtFunctionRangeStop.setToolTipText("Function stop time (seconds)");

        lblFunctionRangeStartMarkerStyle.setText("Style:");
        lblFunctionRangeStartMarkerStyle.setToolTipText("Marker Style");

        lblFunctionRangeStartMarkerWidth.setText("Width:");
        lblFunctionRangeStartMarkerWidth.setToolTipText("Marker width");

        lblFunctionRangeStopMarkerStyle.setText("Style:");
        lblFunctionRangeStopMarkerStyle.setToolTipText("Marker Style");

        lblFunctionRangeStopMarkerWidth.setText("Width:");
        lblFunctionRangeStopMarkerWidth.setToolTipText("Marker width");

        lblBaselineFunction.setText("Baseline Function:");

        lblBaselineFunctionStyle.setText("Style:");

        lblBaselineFunctionColor.setText("Color:");

        txtBaselineFunctionColor.setEditable(false);
        txtBaselineFunctionColor.setToolTipText("Click to edit color");

        lblBaselineFunctionWidth.setText("Width:");
        lblBaselineFunctionWidth.setToolTipText("Marker width");

        javax.swing.GroupLayout pnlFunctionRangeLayout = new javax.swing.GroupLayout(pnlFunctionRange);
        pnlFunctionRange.setLayout(pnlFunctionRangeLayout);
        pnlFunctionRangeLayout.setHorizontalGroup(
            pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFunctionRangeLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblBaselineFunction, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlFunctionRangeLayout.createSequentialGroup()
                        .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFunctionRangeStop, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFunctionRangeStart, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ftxtFunctionRangeStart, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(ftxtFunctionRangeStop))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlFunctionRangeLayout.createSequentialGroup()
                        .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlFunctionRangeLayout.createSequentialGroup()
                                .addComponent(lblFunctionRangeStartMarkerStyle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboxFunctionRangeStartMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlFunctionRangeLayout.createSequentialGroup()
                                .addComponent(lblFunctionRangeStopMarkerStyle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboxFunctionRangeStopMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29)
                        .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlFunctionRangeLayout.createSequentialGroup()
                                .addComponent(lblFunctionRangeStartMarkerColor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFunctionRangeStartMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(lblFunctionRangeStartMarkerWidth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerFunctionRangeStartMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlFunctionRangeLayout.createSequentialGroup()
                                .addComponent(lblFunctionRangeStopMarkerColor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFunctionRangeStopMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(lblFunctionRangeStopMarkerWidth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerFunctionRangeStopMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlFunctionRangeLayout.createSequentialGroup()
                        .addComponent(lblBaselineFunctionStyle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboxBaselineFunctionStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(lblBaselineFunctionColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBaselineFunctionColor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(lblBaselineFunctionWidth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerBaselineFunctionWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        pnlFunctionRangeLayout.setVerticalGroup(
            pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFunctionRangeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFunctionRangeLayout.createSequentialGroup()
                        .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(spinnerFunctionRangeStartMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFunctionRangeStartMarkerWidth))
                            .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblFunctionRangeStartMarkerColor)
                                .addComponent(txtFunctionRangeStartMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFunctionRangeStartMarkerStyle)
                                .addComponent(cboxFunctionRangeStartMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblFunctionRangeStopMarkerStyle)
                                .addComponent(cboxFunctionRangeStopMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblFunctionRangeStopMarkerWidth)
                                .addComponent(spinnerFunctionRangeStopMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblFunctionRangeStopMarkerColor)
                                .addComponent(txtFunctionRangeStopMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblBaselineFunctionStyle)
                                .addComponent(lblBaselineFunctionColor)
                                .addComponent(txtBaselineFunctionColor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblBaselineFunctionWidth)
                                .addComponent(spinnerBaselineFunctionWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cboxBaselineFunctionStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlFunctionRangeLayout.createSequentialGroup()
                        .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ftxtFunctionRangeStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFunctionRangeStart))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlFunctionRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ftxtFunctionRangeStop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFunctionRangeStop))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBaselineFunction)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlApplicationRange.setBorder(javax.swing.BorderFactory.createTitledBorder("Application Range"));

        lblApplicationRangeStart.setText("Start:");
        lblApplicationRangeStart.setToolTipText("Application start time (seconds)");

        lblApplicationRangeStop.setText("Stop:");
        lblApplicationRangeStop.setToolTipText("Application stop time (seconds)");

        lblApplicationRangeStartMarkerColor.setText("Color:");
        lblApplicationRangeStartMarkerColor.setToolTipText("Marker color");

        txtApplicationRangeStartMarkerColor.setEditable(false);
        txtApplicationRangeStartMarkerColor.setToolTipText("Click to edit color");

        lblApplicationRangeStopMarkerColor.setText("Color:");
        lblApplicationRangeStopMarkerColor.setToolTipText("Marker color");

        txtApplicationRangeStopMarkerColor.setEditable(false);
        txtApplicationRangeStopMarkerColor.setToolTipText("Click to edit color");

        ftxtApplicationRangeStart.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.####"))));
        ftxtApplicationRangeStart.setToolTipText("Application start time (seconds)");

        ftxtApplicationRangeStop.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.####"))));
        ftxtApplicationRangeStop.setToolTipText("Application stop time (seconds)");

        lblApplicationRangeStartMarkerStyle.setText("Style:");
        lblApplicationRangeStartMarkerStyle.setToolTipText("Marker style");

        lblApplicationRangeStopMarkerStyle.setText("Style:");
        lblApplicationRangeStopMarkerStyle.setToolTipText("Marker style");

        lblApplicationRangeStartMarkerWidth.setText("Width:");
        lblApplicationRangeStartMarkerWidth.setToolTipText("Marker width");

        lblApplicationRangeStopMarkerWidth.setText("Width:");
        lblApplicationRangeStopMarkerWidth.setToolTipText("Marker width");

        javax.swing.GroupLayout pnlApplicationRangeLayout = new javax.swing.GroupLayout(pnlApplicationRange);
        pnlApplicationRange.setLayout(pnlApplicationRangeLayout);
        pnlApplicationRangeLayout.setHorizontalGroup(
            pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplicationRangeLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblApplicationRangeStart)
                    .addComponent(lblApplicationRangeStop))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ftxtApplicationRangeStart)
                    .addComponent(ftxtApplicationRangeStop))
                .addGap(18, 18, 18)
                .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblApplicationRangeStopMarkerStyle)
                    .addComponent(lblApplicationRangeStartMarkerStyle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboxApplicationRangeStopMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxApplicationRangeStartMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlApplicationRangeLayout.createSequentialGroup()
                        .addComponent(lblApplicationRangeStopMarkerColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApplicationRangeStopMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlApplicationRangeLayout.createSequentialGroup()
                        .addComponent(lblApplicationRangeStartMarkerColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApplicationRangeStartMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblApplicationRangeStartMarkerWidth)
                    .addComponent(lblApplicationRangeStopMarkerWidth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spinnerApplicationRangeStartMarkerWidth, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                    .addComponent(spinnerApplicationRangeStopMarkerWidth))
                .addGap(20, 20, 20))
        );
        pnlApplicationRangeLayout.setVerticalGroup(
            pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApplicationRangeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlApplicationRangeLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblApplicationRangeStartMarkerColor)
                            .addComponent(txtApplicationRangeStartMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblApplicationRangeStopMarkerColor)
                            .addComponent(txtApplicationRangeStopMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlApplicationRangeLayout.createSequentialGroup()
                        .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblApplicationRangeStartMarkerStyle)
                            .addComponent(cboxApplicationRangeStartMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblApplicationRangeStopMarkerStyle)
                            .addComponent(cboxApplicationRangeStopMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlApplicationRangeLayout.createSequentialGroup()
                        .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblApplicationRangeStartMarkerWidth)
                                .addComponent(spinnerApplicationRangeStartMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblApplicationRangeStart)
                                .addComponent(ftxtApplicationRangeStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblApplicationRangeStopMarkerWidth)
                                .addComponent(spinnerApplicationRangeStopMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlApplicationRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblApplicationRangeStop)
                                .addComponent(ftxtApplicationRangeStop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pnlSeismicFilterRange.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter Range"));

        lblSeismicFunctionRangeLow.setText("Low:");

        lblSeismicFilterRangeHigh.setText("High:");

        javax.swing.GroupLayout pnlSeismicFilterRangeLayout = new javax.swing.GroupLayout(pnlSeismicFilterRange);
        pnlSeismicFilterRange.setLayout(pnlSeismicFilterRangeLayout);
        pnlSeismicFilterRangeLayout.setHorizontalGroup(
            pnlSeismicFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSeismicFilterRangeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSeismicFunctionRangeLow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ftxtSeismicFilterRangeLow, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(lblSeismicFilterRangeHigh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ftxtSeismicFilterRangeHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(233, Short.MAX_VALUE))
        );
        pnlSeismicFilterRangeLayout.setVerticalGroup(
            pnlSeismicFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSeismicFilterRangeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSeismicFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeismicFunctionRangeLow)
                    .addComponent(ftxtSeismicFilterRangeLow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSeismicFilterRangeHigh)
                    .addComponent(ftxtSeismicFilterRangeHigh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlEvent.setBorder(javax.swing.BorderFactory.createTitledBorder("Event"));

        lblEventOnset.setText("Onset:");
        lblEventOnset.setToolTipText("Event onset time (seconds)");

        ftxtEventOnset.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.####"))));
        ftxtEventOnset.setToolTipText("Event onset time (seconds)");

        lblEventOnsetMarkerColor.setText("Color:");
        lblEventOnsetMarkerColor.setToolTipText("Marker color");

        txtEventOnsetMarkerColor.setEditable(false);
        txtEventOnsetMarkerColor.setToolTipText("Click to edit color");

        lblEventOnsetMarkerStyle.setText("Style:");
        lblEventOnsetMarkerStyle.setToolTipText("Marker style");

        lblEventOnsetMarkerWidth.setText("Width:");
        lblEventOnsetMarkerWidth.setToolTipText("Marker width");

        javax.swing.GroupLayout pnlEventLayout = new javax.swing.GroupLayout(pnlEvent);
        pnlEvent.setLayout(pnlEventLayout);
        pnlEventLayout.setHorizontalGroup(
            pnlEventLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEventLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEventOnset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ftxtEventOnset, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblEventOnsetMarkerStyle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboxEventOnsetMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(lblEventOnsetMarkerColor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEventOnsetMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(lblEventOnsetMarkerWidth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spinnerEventOnsetMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        pnlEventLayout.setVerticalGroup(
            pnlEventLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEventLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEventLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEventLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblEventOnset)
                        .addComponent(ftxtEventOnset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboxEventOnsetMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblEventOnsetMarkerStyle)
                        .addComponent(lblEventOnsetMarkerColor)
                        .addComponent(txtEventOnsetMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEventLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spinnerEventOnsetMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblEventOnsetMarkerWidth)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlSmSeismicChartEditorLayout = new javax.swing.GroupLayout(pnlSmSeismicChartEditor);
        pnlSmSeismicChartEditor.setLayout(pnlSmSeismicChartEditorLayout);
        pnlSmSeismicChartEditorLayout.setHorizontalGroup(
            pnlSmSeismicChartEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSmSeismicChartEditorLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pnlSmSeismicChartEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlSeismicFilterRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlFunctionRange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlApplicationRange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlEvent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        pnlSmSeismicChartEditorLayout.setVerticalGroup(
            pnlSmSeismicChartEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSmSeismicChartEditorLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(pnlFunctionRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlApplicationRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSeismicFilterRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlSeismicFilterRange.getAccessibleContext().setAccessibleName("Filter");

        jTabbedPane1.addTab("Seismic Trace Editor", pnlSmSeismicChartEditor);

        pnlFilterRange.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter Range"));

        lblSpectralFilterRangeLow.setText("Low:");
        lblSpectralFilterRangeLow.setToolTipText("Low frequency filter value (Hz)");

        lblSpectralFilterRangeHigh.setText("High:");
        lblSpectralFilterRangeHigh.setToolTipText("High frequency filter value (Hz)");

        lblFilterRangeLowMarkerColor.setText("Color:");
        lblFilterRangeLowMarkerColor.setToolTipText("Marker color");

        txtFilterRangeLowMarkerColor.setEditable(false);
        txtFilterRangeLowMarkerColor.setToolTipText("Click to edit color");

        lblFilterRangeHighMarkerColor.setText("Color:");
        lblFilterRangeHighMarkerColor.setToolTipText("Marker color");

        txtFilterRangeHighMarkerColor.setEditable(false);
        txtFilterRangeHighMarkerColor.setToolTipText("Click to edit color");

        ftxtSpectralFilterRangeLow.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.####"))));
        ftxtSpectralFilterRangeLow.setToolTipText("Low frequency filter value (Hz)");

        ftxtSpectralFilterRangeHigh.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.####"))));
        ftxtSpectralFilterRangeHigh.setToolTipText("High frequency filter value (Hz)");

        lblFilterRangeLowMarkerStyle.setText("Style:");
        lblFilterRangeLowMarkerStyle.setToolTipText("Marker Style");

        lblFilterRangeLowMarkerWidth.setText("Width:");
        lblFilterRangeLowMarkerWidth.setToolTipText("Marker width");

        lblFilterRangeHighMarkerStyle.setText("Style:");
        lblFilterRangeHighMarkerStyle.setToolTipText("Marker Style");

        lblFilterRangeHighMarkerWidth.setText("Width:");
        lblFilterRangeHighMarkerWidth.setToolTipText("Marker width");

        javax.swing.GroupLayout pnlFilterRangeLayout = new javax.swing.GroupLayout(pnlFilterRange);
        pnlFilterRange.setLayout(pnlFilterRangeLayout);
        pnlFilterRangeLayout.setHorizontalGroup(
            pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterRangeLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSpectralFilterRangeHigh, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSpectralFilterRangeLow, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ftxtSpectralFilterRangeLow, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(ftxtSpectralFilterRangeHigh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlFilterRangeLayout.createSequentialGroup()
                        .addComponent(lblFilterRangeLowMarkerStyle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboxFilterRangeLowMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFilterRangeLayout.createSequentialGroup()
                        .addComponent(lblFilterRangeHighMarkerStyle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboxFilterRangeHighMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFilterRangeLayout.createSequentialGroup()
                        .addComponent(lblFilterRangeLowMarkerColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFilterRangeLowMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(lblFilterRangeLowMarkerWidth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerFilterRangeLowMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFilterRangeLayout.createSequentialGroup()
                        .addComponent(lblFilterRangeHighMarkerColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFilterRangeHighMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(lblFilterRangeHighMarkerWidth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerFilterRangeHighMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlFilterRangeLayout.setVerticalGroup(
            pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFilterRangeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblFilterRangeLowMarkerWidth)
                        .addComponent(spinnerFilterRangeLowMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSpectralFilterRangeLow)
                        .addComponent(lblFilterRangeLowMarkerColor)
                        .addComponent(txtFilterRangeLowMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ftxtSpectralFilterRangeLow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblFilterRangeLowMarkerStyle)
                        .addComponent(cboxFilterRangeLowMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblFilterRangeHighMarkerStyle)
                        .addComponent(cboxFilterRangeHighMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblFilterRangeHighMarkerWidth)
                        .addComponent(spinnerFilterRangeHighMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFilterRangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSpectralFilterRangeHigh)
                        .addComponent(lblFilterRangeHighMarkerColor)
                        .addComponent(txtFilterRangeHighMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ftxtSpectralFilterRangeHigh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlSmSpectralChartEditorLayout = new javax.swing.GroupLayout(pnlSmSpectralChartEditor);
        pnlSmSpectralChartEditor.setLayout(pnlSmSpectralChartEditorLayout);
        pnlSmSpectralChartEditorLayout.setHorizontalGroup(
            pnlSmSpectralChartEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSmSpectralChartEditorLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(pnlFilterRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(136, Short.MAX_VALUE))
        );
        pnlSmSpectralChartEditorLayout.setVerticalGroup(
            pnlSmSpectralChartEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSmSpectralChartEditorLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(pnlFilterRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(335, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Fourier Amplitude Spectrum Editor", pnlSmSpectralChartEditor);

        lblStartTime.setText("Start Time:");
        lblStartTime.setToolTipText("Start time (seconds)");

        lblStopTime.setText("Stop Time:");
        lblStopTime.setToolTipText("Stop time (seconds)");

        ftxtStartTime.setToolTipText("Start time (seconds)");

        ftxtStopTime.setToolTipText("Stop time (seconds)");

        lblStartTimeMarkerStyle.setText("Style:");
        lblStartTimeMarkerStyle.setToolTipText("Start time marker style");

        lblStopTimeMarkerStyle.setText("Style:");
        lblStopTimeMarkerStyle.setToolTipText("Stop time marker style");

        cboxStartTimeMarkerStyle.setToolTipText("Start time marker style");

        cboxStopTimeMarkerStyle.setToolTipText("Stop time marker style");

        lblStartTimeMarkerColor.setText("Color:");
        lblStartTimeMarkerColor.setToolTipText("Start time marker color");

        lblStopTimeMarkerColor.setText("Color:");
        lblStopTimeMarkerColor.setToolTipText("Stop time marker color");

        txtStartTimeMarkerColor.setEditable(false);
        txtStartTimeMarkerColor.setToolTipText("Click to edit color selection");

        txtStopTimeMarkerColor.setEditable(false);
        txtStopTimeMarkerColor.setToolTipText("Click to edit color selection");

        lblStartTimeMarkerWidth.setText("Width:");
        lblStartTimeMarkerWidth.setToolTipText("Start time marker width");

        lblStopTimeMarkerWidth.setText("Width:");
        lblStopTimeMarkerWidth.setToolTipText("Stop time marker width");

        spinnerStartTimeMarkerWidth.setToolTipText("Start time marker width");

        spinnerStopTimeMarkerWidth.setToolTipText("Stop time marker width");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("DateTime Comparison Labels"));

        lblDateTimeEqualTextColor.setText("Text Color When Equal:");
        lblDateTimeEqualTextColor.setToolTipText("");

        lblDateTimeUnequalTextColor.setText("Text Color When Unequal:");

        txtDateTimeEqualTextColor.setEditable(false);
        txtDateTimeEqualTextColor.setToolTipText("Click to edit color selection ");

        txtDateTimeUnequalTextColor.setEditable(false);
        txtDateTimeUnequalTextColor.setToolTipText("Click to edit color selection ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblDateTimeUnequalTextColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDateTimeEqualTextColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDateTimeEqualTextColor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDateTimeUnequalTextColor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(278, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateTimeEqualTextColor)
                    .addComponent(txtDateTimeEqualTextColor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateTimeUnequalTextColor)
                    .addComponent(txtDateTimeUnequalTextColor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlSmTrimToolLayout = new javax.swing.GroupLayout(pnlSmTrimTool);
        pnlSmTrimTool.setLayout(pnlSmTrimToolLayout);
        pnlSmTrimToolLayout.setHorizontalGroup(
            pnlSmTrimToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSmTrimToolLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlSmTrimToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlSmTrimToolLayout.createSequentialGroup()
                        .addGroup(pnlSmTrimToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStopTime)
                            .addComponent(lblStartTime))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlSmTrimToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ftxtStartTime, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(ftxtStopTime))
                        .addGap(29, 29, 29)
                        .addGroup(pnlSmTrimToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlSmTrimToolLayout.createSequentialGroup()
                                .addComponent(lblStartTimeMarkerStyle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboxStartTimeMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlSmTrimToolLayout.createSequentialGroup()
                                .addComponent(lblStopTimeMarkerStyle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboxStopTimeMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addGroup(pnlSmTrimToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSmTrimToolLayout.createSequentialGroup()
                                .addComponent(lblStartTimeMarkerColor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtStartTimeMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlSmTrimToolLayout.createSequentialGroup()
                                .addComponent(lblStopTimeMarkerColor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtStopTimeMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addGroup(pnlSmTrimToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlSmTrimToolLayout.createSequentialGroup()
                                .addComponent(lblStopTimeMarkerWidth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerStopTimeMarkerWidth))
                            .addGroup(pnlSmTrimToolLayout.createSequentialGroup()
                                .addComponent(lblStartTimeMarkerWidth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerStartTimeMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        pnlSmTrimToolLayout.setVerticalGroup(
            pnlSmTrimToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSmTrimToolLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnlSmTrimToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStartTime)
                    .addComponent(ftxtStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStartTimeMarkerStyle)
                    .addComponent(cboxStartTimeMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStartTimeMarkerColor)
                    .addComponent(txtStartTimeMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStartTimeMarkerWidth)
                    .addComponent(spinnerStartTimeMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSmTrimToolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStopTime)
                    .addComponent(ftxtStopTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStopTimeMarkerStyle)
                    .addComponent(cboxStopTimeMarkerStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStopTimeMarkerColor)
                    .addComponent(txtStopTimeMarkerColor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStopTimeMarkerWidth)
                    .addComponent(spinnerStopTimeMarkerWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(251, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Trim Tool", pnlSmTrimTool);

        pnlChartSize.setBorder(javax.swing.BorderFactory.createTitledBorder("Chart Size"));

        pnlChartSizeGroup.setBorder(javax.swing.BorderFactory.createTitledBorder("Group"));
        pnlChartSizeGroup.setToolTipText("Size for clustered plots");

        lblChartSizeGroupWidth.setLabelFor(txtChartSizeGroupWidth);
        lblChartSizeGroupWidth.setText("Width:");

        lblChartSizeGroupHeight.setLabelFor(txtChartSizeGroupHeight);
        lblChartSizeGroupHeight.setText("Height:");

        javax.swing.GroupLayout pnlChartSizeGroupLayout = new javax.swing.GroupLayout(pnlChartSizeGroup);
        pnlChartSizeGroup.setLayout(pnlChartSizeGroupLayout);
        pnlChartSizeGroupLayout.setHorizontalGroup(
            pnlChartSizeGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChartSizeGroupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblChartSizeGroupWidth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtChartSizeGroupWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblChartSizeGroupHeight)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtChartSizeGroupHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pnlChartSizeGroupLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtChartSizeGroupHeight, txtChartSizeGroupWidth});

        pnlChartSizeGroupLayout.setVerticalGroup(
            pnlChartSizeGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChartSizeGroupLayout.createSequentialGroup()
                .addGroup(pnlChartSizeGroupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChartSizeGroupWidth)
                    .addComponent(txtChartSizeGroupWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChartSizeGroupHeight)
                    .addComponent(txtChartSizeGroupHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlChartSizeSingle.setBorder(javax.swing.BorderFactory.createTitledBorder("Single"));
        pnlChartSizeSingle.setToolTipText("Size for individual plots");

        lblChartSizeSingleWidth.setLabelFor(txtChartSizeSingleWidth);
        lblChartSizeSingleWidth.setText("Width:");

        lblChartSizeSingleHeight.setLabelFor(txtChartSizeSingleHeight);
        lblChartSizeSingleHeight.setText("Height:");

        javax.swing.GroupLayout pnlChartSizeSingleLayout = new javax.swing.GroupLayout(pnlChartSizeSingle);
        pnlChartSizeSingle.setLayout(pnlChartSizeSingleLayout);
        pnlChartSizeSingleLayout.setHorizontalGroup(
            pnlChartSizeSingleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChartSizeSingleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblChartSizeSingleWidth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtChartSizeSingleWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblChartSizeSingleHeight)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtChartSizeSingleHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        pnlChartSizeSingleLayout.setVerticalGroup(
            pnlChartSizeSingleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChartSizeSingleLayout.createSequentialGroup()
                .addGroup(pnlChartSizeSingleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChartSizeSingleWidth)
                    .addComponent(txtChartSizeSingleWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChartSizeSingleHeight)
                    .addComponent(txtChartSizeSingleHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlChartSizeLayout = new javax.swing.GroupLayout(pnlChartSize);
        pnlChartSize.setLayout(pnlChartSizeLayout);
        pnlChartSizeLayout.setHorizontalGroup(
            pnlChartSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChartSizeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlChartSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlChartSizeSingle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlChartSizeGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlChartSizeLayout.setVerticalGroup(
            pnlChartSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChartSizeLayout.createSequentialGroup()
                .addComponent(pnlChartSizeSingle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlChartSizeGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        chkboxDisplayLegend.setText("Display Legend");

        chkboxDisplayPlotLabels.setText("Display Plot Labels");

        pnlPlotAreaPosition.setBorder(javax.swing.BorderFactory.createTitledBorder("Plot Area Position"));
        pnlPlotAreaPosition.setToolTipText("Plot area position within the chart area");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 102, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        txtPlotAreaPositionTop.setToolTipText("Plot area position - top");

        txtPlotAreaPositionLeft.setToolTipText("Plot area position - left");

        txtPlotAreaPositionBottom.setToolTipText("Plot area position - bottom");

        txtPlotAreaPositionRight.setToolTipText("Plot area position - right");

        javax.swing.GroupLayout pnlPlotAreaPositionLayout = new javax.swing.GroupLayout(pnlPlotAreaPosition);
        pnlPlotAreaPosition.setLayout(pnlPlotAreaPositionLayout);
        pnlPlotAreaPositionLayout.setHorizontalGroup(
            pnlPlotAreaPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPlotAreaPositionLayout.createSequentialGroup()
                .addGroup(pnlPlotAreaPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPlotAreaPositionLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtPlotAreaPositionLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPlotAreaPositionRight, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPlotAreaPositionLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(txtPlotAreaPositionBottom, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPlotAreaPositionLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(txtPlotAreaPositionTop, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        pnlPlotAreaPositionLayout.setVerticalGroup(
            pnlPlotAreaPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPlotAreaPositionLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(txtPlotAreaPositionTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPlotAreaPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPlotAreaPositionLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPlotAreaPositionLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlPlotAreaPositionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPlotAreaPositionLayout.createSequentialGroup()
                                .addComponent(txtPlotAreaPositionLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPlotAreaPositionLayout.createSequentialGroup()
                                .addComponent(txtPlotAreaPositionRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)))))
                .addComponent(txtPlotAreaPositionBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        chkboxDisplayXGrid.setText("Display X Gridlines");

        chkboxDisplayYGrid.setText("Display Y Gridlines");

        chkboxDisplayXAxisTitle.setText("Display X Axis Title");

        chkboxDisplayYAxisTitle.setText("Display Y Axis Title");

        chkboxDisplayXAxisLabels.setText("Display X Axis Labels");

        chkboxDisplayYAxisLabels.setText("Display Y Axis Labels");

        pnlColorScheme.setBorder(javax.swing.BorderFactory.createTitledBorder("Color Scheme"));

        lblForegroundColor.setLabelFor(txtColorForeground);
        lblForegroundColor.setText("Foreground:");

        txtColorForeground.setEditable(false);
        txtColorForeground.setToolTipText("Click to edit color");

        lblColorBackground.setText("Background:");

        txtColorBackground.setEditable(false);
        txtColorBackground.setToolTipText("Click to edit color");

        org.openide.awt.Mnemonics.setLocalizedText(lblColorPlot, "Plot:");

        txtColorPlot.setEditable(false);
        txtColorPlot.setToolTipText("Click to edit color");

        javax.swing.GroupLayout pnlColorSchemeLayout = new javax.swing.GroupLayout(pnlColorScheme);
        pnlColorScheme.setLayout(pnlColorSchemeLayout);
        pnlColorSchemeLayout.setHorizontalGroup(
            pnlColorSchemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColorSchemeLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnlColorSchemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlColorSchemeLayout.createSequentialGroup()
                        .addComponent(lblColorBackground)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtColorBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlColorSchemeLayout.createSequentialGroup()
                        .addComponent(lblForegroundColor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtColorForeground, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(lblColorPlot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtColorPlot, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlColorSchemeLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtColorBackground, txtColorForeground});

        pnlColorSchemeLayout.setVerticalGroup(
            pnlColorSchemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlColorSchemeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlColorSchemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblForegroundColor)
                    .addComponent(txtColorForeground, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblColorPlot)
                    .addComponent(txtColorPlot, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlColorSchemeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblColorBackground)
                    .addComponent(txtColorBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlColorSchemeLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtColorBackground, txtColorForeground});

        pnlFont.setBorder(javax.swing.BorderFactory.createTitledBorder("Font"));

        lblFont.setText("Font");
        lblFont.setToolTipText("Click to edit");
        lblFont.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFontMouseClicked(evt);
            }
        });

        btnFont.setText("Edit");
        btnFont.setToolTipText("Click to edit");
        btnFont.setPreferredSize(new java.awt.Dimension(67, 23));
        btnFont.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFontActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFontLayout = new javax.swing.GroupLayout(pnlFont);
        pnlFont.setLayout(pnlFontLayout);
        pnlFontLayout.setHorizontalGroup(
            pnlFontLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFontLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFont, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addGap(40, 40, 40)
                .addComponent(btnFont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        pnlFontLayout.setVerticalGroup(
            pnlFontLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFontLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFontLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblFont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        chkboxDisplayPlotAnnotation.setText("Display Plot Annotation");

        javax.swing.GroupLayout pnlChartOptionsLayout = new javax.swing.GroupLayout(pnlChartOptions);
        pnlChartOptions.setLayout(pnlChartOptionsLayout);
        pnlChartOptionsLayout.setHorizontalGroup(
            pnlChartOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChartOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlChartOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlChartOptionsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnlChartOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkboxDisplayYGrid)
                            .addComponent(chkboxDisplayXGrid)
                            .addComponent(chkboxDisplayYAxisLabels)
                            .addGroup(pnlChartOptionsLayout.createSequentialGroup()
                                .addGroup(pnlChartOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkboxDisplayXAxisTitle)
                                    .addComponent(chkboxDisplayYAxisTitle)
                                    .addComponent(chkboxDisplayXAxisLabels))
                                .addGap(72, 72, 72)
                                .addGroup(pnlChartOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkboxDisplayPlotLabels)
                                    .addComponent(chkboxDisplayPlotAnnotation)
                                    .addComponent(chkboxDisplayLegend)))))
                    .addGroup(pnlChartOptionsLayout.createSequentialGroup()
                        .addGroup(pnlChartOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pnlColorScheme, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlChartSize, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlChartOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlPlotAreaPosition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlFont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        pnlChartOptionsLayout.setVerticalGroup(
            pnlChartOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChartOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlChartOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlPlotAreaPosition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlChartSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlChartOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlColorScheme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlFont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(pnlChartOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlChartOptionsLayout.createSequentialGroup()
                        .addComponent(chkboxDisplayXAxisTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkboxDisplayYAxisTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkboxDisplayXAxisLabels))
                    .addGroup(pnlChartOptionsLayout.createSequentialGroup()
                        .addComponent(chkboxDisplayLegend)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkboxDisplayPlotLabels)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkboxDisplayPlotAnnotation)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkboxDisplayYAxisLabels)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkboxDisplayXGrid)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkboxDisplayYGrid)
                .addGap(108, 108, 108))
        );

        jTabbedPane1.addTab("Chart Options", pnlChartOptions);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel))
                    .addComponent(jTabbedPane1))
                .addGap(23, 23, 23))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnOk});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addGap(21, 21, 21))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Chart Editor");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populateMarkerStyleLists() {
        for (MarkerStyle style : MarkerStyle.values()) {
            this.cboxFunctionRangeStartMarkerStyle.addItem(style);
            this.cboxFunctionRangeStopMarkerStyle.addItem(style);
            this.cboxBaselineFunctionStyle.addItem(style);
            this.cboxApplicationRangeStartMarkerStyle.addItem(style);
            this.cboxApplicationRangeStopMarkerStyle.addItem(style);
            this.cboxEventOnsetMarkerStyle.addItem(style);
            
            this.cboxFilterRangeLowMarkerStyle.addItem(style);
            this.cboxFilterRangeHighMarkerStyle.addItem(style);
            
            this.cboxStartTimeMarkerStyle.addItem(style);
            this.cboxStopTimeMarkerStyle.addItem(style);
        }
    }
    
    private void populateMarkerWidthLists() {
        this.spinnerFunctionRangeStartMarkerWidth.setModel(new SpinnerNumberModel(1.0,0,10.0,.5));
        this.spinnerFunctionRangeStopMarkerWidth.setModel(new SpinnerNumberModel(1.0,0,10.0,.5));
        this.spinnerBaselineFunctionWidth.setModel(new SpinnerNumberModel(1.0,0,10.0,.5));
        this.spinnerApplicationRangeStartMarkerWidth.setModel(new SpinnerNumberModel(1.0,0,10.0,.5));
        this.spinnerApplicationRangeStopMarkerWidth.setModel(new SpinnerNumberModel(1.0,0,10.0,.5));
        this.spinnerEventOnsetMarkerWidth.setModel(new SpinnerNumberModel(1.0,0,10.0,.5));
        
        this.spinnerFilterRangeLowMarkerWidth.setModel(new SpinnerNumberModel(1.0,0,10.0,.5));
        this.spinnerFilterRangeHighMarkerWidth.setModel(new SpinnerNumberModel(1.0,0,10.0,.5));
        
        this.spinnerStartTimeMarkerWidth.setModel(new SpinnerNumberModel(1.0,0,10.0,.5));
        this.spinnerStopTimeMarkerWidth.setModel(new SpinnerNumberModel(1.0,0,10.0,.5));
    }
    
    private void initializeSettings()
    {
        // Get general settings.
        txtEventsRootDir.setText(SmPreferences.General.getEventsRootDir());
        txtTemplatesRootDir.setText(SmPreferences.General.getTemplatesRootDir());
        txtStationFolderName.setText(SmPreferences.General.getStationTemplatesFolderName());
        txtTemplate.setText(SmPreferences.General.getTemplate());
        txtLogsDir.setText(SmPreferences.General.getLogsDir());
        txtTrashDir.setText(SmPreferences.General.getTrashDir());
        
        // Get PRISM parameter settings.
        cboxButterworthFilterOrder.setSelectedItem(
            SmPreferences.PrismParams.getButterworthFilterOrder());
        txtButterworthFilterTaperLength.setText(String.valueOf(SmPreferences.PrismParams.getButterworthFilterTaperLength()));
        txtStrongMotionThresholdPcnt.setText(String.valueOf(SmPreferences.PrismParams.getStrongMotionThresholdPcnt()));
        cboxDifferentialOrder.setSelectedItem(
            SmPreferences.PrismParams.getDifferentialOrder());
        
        // Get SmSeismicTraceEditor settings.
        ftxtFunctionRangeStart.setValue(SmPreferences.SmSeismicTraceEditor.getFunctionRangeStart());
        ftxtFunctionRangeStop.setValue(SmPreferences.SmSeismicTraceEditor.getFunctionRangeStop());
        ftxtApplicationRangeStart.setValue(SmPreferences.SmSeismicTraceEditor.getApplicationRangeStart());
        ftxtApplicationRangeStop.setValue(SmPreferences.SmSeismicTraceEditor.getApplicationRangeStop());
        ftxtEventOnset.setValue(SmPreferences.SmSeismicTraceEditor.getEventOnset());
        
        txtFunctionRangeStartMarkerColor.setBackground(
            new Color(SmPreferences.SmSeismicTraceEditor.getFunctionRangeStartMarkerColor()));
        txtFunctionRangeStopMarkerColor.setBackground(
            new Color(SmPreferences.SmSeismicTraceEditor.getFunctionRangeStopMarkerColor()));
        txtBaselineFunctionColor.setBackground(
            new Color(SmPreferences.SmSeismicTraceEditor.getBaselineFunctionColor()));
        txtApplicationRangeStartMarkerColor.setBackground(
            new Color(SmPreferences.SmSeismicTraceEditor.getApplicationRangeStartMarkerColor()));
        txtApplicationRangeStopMarkerColor.setBackground(
            new Color(SmPreferences.SmSeismicTraceEditor.getApplicationRangeStopMarkerColor()));
        txtEventOnsetMarkerColor.setBackground(
            new Color(SmPreferences.SmSeismicTraceEditor.getEventOnsetMarkerColor()));
        
        cboxFunctionRangeStartMarkerStyle.setSelectedItem(
            SmPreferences.SmSeismicTraceEditor.getFunctionRangeStartMarkerStyle());
        cboxFunctionRangeStopMarkerStyle.setSelectedItem(
            SmPreferences.SmSeismicTraceEditor.getFunctionRangeStopMarkerStyle());
        
        int bfStyle = SmPreferences.SmSeismicTraceEditor.getBaselineFunctionStyle();
        if (bfStyle == ChartConstants.LS_SOLID)
            cboxBaselineFunctionStyle.setSelectedItem(MarkerStyle.SOLID);
        else if (bfStyle == ChartConstants.LS_DASH_4_4)
            cboxBaselineFunctionStyle.setSelectedItem(MarkerStyle.DASH);
        else
            cboxBaselineFunctionStyle.setSelectedItem(MarkerStyle.DOT);

        cboxApplicationRangeStartMarkerStyle.setSelectedItem(
            SmPreferences.SmSeismicTraceEditor.getApplicationRangeStartMarkerStyle());
        cboxApplicationRangeStopMarkerStyle.setSelectedItem(
            SmPreferences.SmSeismicTraceEditor.getApplicationRangeStopMarkerStyle());
        cboxEventOnsetMarkerStyle.setSelectedItem(
            SmPreferences.SmSeismicTraceEditor.getEventOnsetMarkerStyle());
        
        spinnerFunctionRangeStartMarkerWidth.setValue(
            SmPreferences.SmSeismicTraceEditor.getFunctionRangeStartMarkerWidth());
        spinnerFunctionRangeStopMarkerWidth.setValue(
            SmPreferences.SmSeismicTraceEditor.getFunctionRangeStopMarkerWidth());
        spinnerBaselineFunctionWidth.setValue(
            SmPreferences.SmSeismicTraceEditor.getBaselineFunctionWidth());
        spinnerApplicationRangeStartMarkerWidth.setValue(
            SmPreferences.SmSeismicTraceEditor.getApplicationRangeStartMarkerWidth());
        spinnerApplicationRangeStopMarkerWidth.setValue(
            SmPreferences.SmSeismicTraceEditor.getApplicationRangeStopMarkerWidth());
        spinnerEventOnsetMarkerWidth.setValue(
            SmPreferences.SmSeismicTraceEditor.getEventOnsetMarkerWidth());
        
        ftxtSeismicFilterRangeLow.setValue(SmPreferences.SmSeismicTraceEditor.getFilterRangeLow());
        ftxtSeismicFilterRangeHigh.setValue(SmPreferences.SmSeismicTraceEditor.getFilterRangeHigh());
        
        // Get SmFAS_Editor settings.
        ftxtSpectralFilterRangeLow.setValue(SmPreferences.SmFAS_Editor.getFilterRangeLow());
        ftxtSpectralFilterRangeHigh.setValue(SmPreferences.SmFAS_Editor.getFilterRangeHigh());
        
        txtFilterRangeLowMarkerColor.setBackground(
            new Color(SmPreferences.SmFAS_Editor.getFilterRangeLowMarkerColor()));
        txtFilterRangeHighMarkerColor.setBackground(
            new Color(SmPreferences.SmFAS_Editor.getFilterRangeHighMarkerColor()));
        
        cboxFilterRangeLowMarkerStyle.setSelectedItem(
            SmPreferences.SmFAS_Editor.getFilterRangeLowMarkerStyle());
        cboxFilterRangeHighMarkerStyle.setSelectedItem(
            SmPreferences.SmFAS_Editor.getFilterRangeHighMarkerStyle());
        
        spinnerFilterRangeLowMarkerWidth.setValue(
            SmPreferences.SmFAS_Editor.getFilterRangeLowMarkerWidth());
        spinnerFilterRangeHighMarkerWidth.setValue(
            SmPreferences.SmFAS_Editor.getFilterRangeHighMarkerWidth());
        
        // Get Trim Tool settings.
        ftxtStartTime.setValue(SmPreferences.SmTrimTool.getStartTime());
        ftxtStopTime.setValue(SmPreferences.SmTrimTool.getStopTime());
        
        cboxStartTimeMarkerStyle.setSelectedItem(
            SmPreferences.SmTrimTool.getStartTimeMarkerStyle());
        cboxStopTimeMarkerStyle.setSelectedItem(
            SmPreferences.SmTrimTool.getStopTimeMarkerStyle());
        
        txtStartTimeMarkerColor.setBackground(
            new Color(SmPreferences.SmTrimTool.getStartTimeMarkerColor()));
        txtStopTimeMarkerColor.setBackground(
            new Color(SmPreferences.SmTrimTool.getStopTimeMarkerColor()));
        
        spinnerStartTimeMarkerWidth.setValue(
            SmPreferences.SmTrimTool.getStartTimeMarkerWidth());
        spinnerStopTimeMarkerWidth.setValue(
            SmPreferences.SmTrimTool.getStopTimeMarkerWidth());
        
        txtDateTimeEqualTextColor.setBackground(
            new Color(SmPreferences.SmTrimTool.getDateTimeEqualTextColor()));
        txtDateTimeUnequalTextColor.setBackground(
            new Color(SmPreferences.SmTrimTool.getDateTimeUnequalTextColor()));
        
        // Get chart option settings.
        txtChartSizeSingleWidth.setText(String.valueOf(SmPreferences.ChartOptions.getChartSizeSingleWidth()));
        txtChartSizeSingleHeight.setText(String.valueOf(SmPreferences.ChartOptions.getChartSizeSingleHeight()));
        txtChartSizeGroupWidth.setText(String.valueOf(SmPreferences.ChartOptions.getChartSizeGroupWidth()));
        txtChartSizeGroupHeight.setText(String.valueOf(SmPreferences.ChartOptions.getChartSizeGroupHeight()));
        txtPlotAreaPositionLeft.setText(String.valueOf(SmPreferences.ChartOptions.getPlotAreaPositionLeft()));
        txtPlotAreaPositionTop.setText(String.valueOf(SmPreferences.ChartOptions.getPlotAreaPositionTop()));
        txtPlotAreaPositionRight.setText(String.valueOf(SmPreferences.ChartOptions.getPlotAreaPositionRight()));
        txtPlotAreaPositionBottom.setText(String.valueOf(SmPreferences.ChartOptions.getPlotAreaPositionBottom()));
        txtColorForeground.setBackground(new Color(SmPreferences.ChartOptions.getColorForeground()));
        txtColorBackground.setBackground(new Color(SmPreferences.ChartOptions.getColorBackground()));
        txtColorPlot.setBackground(new Color(SmPreferences.ChartOptions.getColorPlot()));
        
        StyleConstants.setFontFamily(fontAttributes,SmPreferences.ChartOptions.getFontName());
        StyleConstants.setFontSize(fontAttributes,SmPreferences.ChartOptions.getFontSize());
        StyleConstants.setBold(fontAttributes,SmPreferences.ChartOptions.getFontIsBold());
        StyleConstants.setItalic(fontAttributes,SmPreferences.ChartOptions.getFontIsItalic());
//        fontAttributes.addAttribute("FontColor", SmPreferences.ChartOptions.getFontColor());
        
        String fontStr = StyleConstants.getFontFamily(fontAttributes) + " " +
            StyleConstants.getFontSize(fontAttributes) + " ";
        
        if (StyleConstants.isBold(fontAttributes) && StyleConstants.isItalic(fontAttributes))
            fontStr += "Bold Italic";
        else if (StyleConstants.isBold(fontAttributes))
            fontStr += "Bold";
        else if (StyleConstants.isItalic(fontAttributes))
            fontStr += "Italic";
        else
            fontStr += "Plain";
        
        lblFont.setText(fontStr); 
//        lblFont.setForeground(new Color((int)fontAttributes.getAttribute("FontColor")));
            
        chkboxDisplayXAxisTitle.setSelected(SmPreferences.ChartOptions.getDisplayXAxisTitle());
        chkboxDisplayYAxisTitle.setSelected(SmPreferences.ChartOptions.getDisplayYAxisTitle());
        chkboxDisplayXAxisLabels.setSelected(SmPreferences.ChartOptions.getDisplayXAxisLabels());
        chkboxDisplayYAxisLabels.setSelected(SmPreferences.ChartOptions.getDisplayYAxisLabels());
        chkboxDisplayXGrid.setSelected(SmPreferences.ChartOptions.getDisplayXGrid());
        chkboxDisplayYGrid.setSelected(SmPreferences.ChartOptions.getDisplayYGrid());
        chkboxDisplayLegend.setSelected(SmPreferences.ChartOptions.getDisplayLegend());
        chkboxDisplayPlotLabels.setSelected(SmPreferences.ChartOptions.getDisplayPlotLabels());
        chkboxDisplayPlotAnnotation.setSelected(SmPreferences.ChartOptions.getDisplayPlotAnnotation());
        
        // Set listener for color fields.
        txtColorForeground.addMouseListener(colorListener);
        txtColorBackground.addMouseListener(colorListener);
        txtColorPlot.addMouseListener(colorListener);
        txtFunctionRangeStartMarkerColor.addMouseListener(colorListener);
        txtFunctionRangeStopMarkerColor.addMouseListener(colorListener);
        txtBaselineFunctionColor.addMouseListener(colorListener);
        txtApplicationRangeStartMarkerColor.addMouseListener(colorListener);
        txtApplicationRangeStopMarkerColor.addMouseListener(colorListener);
        txtEventOnsetMarkerColor.addMouseListener(colorListener);
        txtFilterRangeLowMarkerColor.addMouseListener(colorListener);
        txtFilterRangeHighMarkerColor.addMouseListener(colorListener);
        txtStartTimeMarkerColor.addMouseListener(colorListener);
        txtStopTimeMarkerColor.addMouseListener(colorListener);
        txtDateTimeEqualTextColor.addMouseListener(colorListener);
        txtDateTimeUnequalTextColor.addMouseListener(colorListener);
    }
    
    private void updateSettings() {
        try
        {
            // Set general settings.
            SmPreferences.General.setEventsRootDir(txtEventsRootDir.getText());
            SmPreferences.General.setTemplatesRootDir(txtTemplatesRootDir.getText());
            SmPreferences.General.setStationTemplatesFolderName(txtStationFolderName.getText());
            SmPreferences.General.setTemplate(txtTemplate.getText());
            SmPreferences.General.setLogsDir(txtLogsDir.getText());
            SmPreferences.General.setTrashDir(txtTrashDir.getText());

            // Set PRISM parameter settings.
            int filterOrder = Integer.parseInt(cboxButterworthFilterOrder.getSelectedItem().toString());
            double length = Double.parseDouble(txtButterworthFilterTaperLength.getText());
            double pcnt = Double.parseDouble(txtStrongMotionThresholdPcnt.getText());
            int diffOrder = Integer.parseInt(cboxDifferentialOrder.getSelectedItem().toString());
            SmPreferences.PrismParams.setButterworthFilterOrder(filterOrder);
            SmPreferences.PrismParams.setButterworthFilterTaperLength(length);
            SmPreferences.PrismParams.setStrongMotionThresholdPcnt(pcnt);
            SmPreferences.PrismParams.setDifferentialOrder(diffOrder);
            
            // Set SmSeismicTraceEditor settings.
            SmPreferences.SmSeismicTraceEditor.setFunctionRangeStart(((Number)ftxtFunctionRangeStart.getValue()).doubleValue());
            SmPreferences.SmSeismicTraceEditor.setFunctionRangeStop(((Number)ftxtFunctionRangeStop.getValue()).doubleValue());
            SmPreferences.SmSeismicTraceEditor.setApplicationRangeStart(((Number)ftxtApplicationRangeStart.getValue()).doubleValue());
            SmPreferences.SmSeismicTraceEditor.setApplicationRangeStop(((Number)ftxtApplicationRangeStop.getValue()).doubleValue());
            SmPreferences.SmSeismicTraceEditor.setEventOnset(((Number)ftxtEventOnset.getValue()).doubleValue());
            
            SmPreferences.SmSeismicTraceEditor.setFunctionRangeStartMarkerColor(txtFunctionRangeStartMarkerColor.getBackground().getRGB());
            SmPreferences.SmSeismicTraceEditor.setFunctionRangeStopMarkerColor(txtFunctionRangeStopMarkerColor.getBackground().getRGB());
            SmPreferences.SmSeismicTraceEditor.setBaselineFunctionColor(txtBaselineFunctionColor.getBackground().getRGB());
            SmPreferences.SmSeismicTraceEditor.setApplicationRangeStartMarkerColor(txtApplicationRangeStartMarkerColor.getBackground().getRGB());
            SmPreferences.SmSeismicTraceEditor.setApplicationRangeStopMarkerColor(txtApplicationRangeStopMarkerColor.getBackground().getRGB());
            SmPreferences.SmSeismicTraceEditor.setEventOnsetMarkerColor(txtEventOnsetMarkerColor.getBackground().getRGB());
        
            SmPreferences.SmSeismicTraceEditor.setFunctionRangeStartMarkerStyle(
                (MarkerStyle)cboxFunctionRangeStartMarkerStyle.getSelectedItem());
            SmPreferences.SmSeismicTraceEditor.setFunctionRangeStopMarkerStyle(
                (MarkerStyle)cboxFunctionRangeStopMarkerStyle.getSelectedItem());
            SmPreferences.SmSeismicTraceEditor.setBaselineFunctionStyle(
                (MarkerStyle)cboxBaselineFunctionStyle.getSelectedItem());
            
            SmPreferences.SmSeismicTraceEditor.setApplicationRangeStartMarkerStyle(
                (MarkerStyle)cboxApplicationRangeStartMarkerStyle.getSelectedItem());
            SmPreferences.SmSeismicTraceEditor.setApplicationRangeStopMarkerStyle(
                (MarkerStyle)cboxApplicationRangeStopMarkerStyle.getSelectedItem());
            SmPreferences.SmSeismicTraceEditor.setEventOnsetMarkerStyle(
                (MarkerStyle)cboxEventOnsetMarkerStyle.getSelectedItem());
            
            SmPreferences.SmSeismicTraceEditor.setFunctionRangeStartMarkerWidth(
                ((Number)spinnerFunctionRangeStartMarkerWidth.getValue()).doubleValue());
            SmPreferences.SmSeismicTraceEditor.setFunctionRangeStopMarkerWidth(
                ((Number)spinnerFunctionRangeStopMarkerWidth.getValue()).doubleValue());
            SmPreferences.SmSeismicTraceEditor.setBaselineFunctionWidth(
                ((Number)spinnerBaselineFunctionWidth.getValue()).doubleValue());
            SmPreferences.SmSeismicTraceEditor.setApplicationRangeStartMarkerWidth(
                ((Number)spinnerApplicationRangeStartMarkerWidth.getValue()).doubleValue());
            SmPreferences.SmSeismicTraceEditor.setApplicationRangeStopMarkerWidth(
                ((Number)spinnerApplicationRangeStopMarkerWidth.getValue()).doubleValue());
            SmPreferences.SmSeismicTraceEditor.setEventOnsetMarkerWidth(
                ((Number)spinnerEventOnsetMarkerWidth.getValue()).doubleValue());
           
            SmPreferences.SmSeismicTraceEditor.setFilterRangeLow(((Number)ftxtSeismicFilterRangeLow.getValue()).doubleValue());
            SmPreferences.SmSeismicTraceEditor.setFilterRangeHigh(((Number)ftxtSeismicFilterRangeHigh.getValue()).doubleValue());
            
            // Set SmFAS_Editor settings.
            SmPreferences.SmFAS_Editor.setFilterRangeLow(((Number)ftxtSpectralFilterRangeLow.getValue()).doubleValue());
            SmPreferences.SmFAS_Editor.setFilterRangeHigh(((Number)ftxtSpectralFilterRangeHigh.getValue()).doubleValue());
            
            SmPreferences.SmFAS_Editor.setFilterRangeLowMarkerColor(txtFilterRangeLowMarkerColor.getBackground().getRGB());
            SmPreferences.SmFAS_Editor.setFilterRangeHighMarkerColor(txtFilterRangeHighMarkerColor.getBackground().getRGB());
            
            SmPreferences.SmFAS_Editor.setFilterRangeLowMarkerStyle(
                (MarkerStyle)cboxFilterRangeLowMarkerStyle.getSelectedItem());
            SmPreferences.SmFAS_Editor.setFilterRangeHighMarkerStyle(
                (MarkerStyle)cboxFilterRangeHighMarkerStyle.getSelectedItem());
            
            SmPreferences.SmFAS_Editor.setFilterRangeLowMarkerWidth(
                ((Number)spinnerFilterRangeLowMarkerWidth.getValue()).doubleValue());
            SmPreferences.SmFAS_Editor.setFilterRangeHighMarkerWidth(
                ((Number)spinnerFilterRangeHighMarkerWidth.getValue()).doubleValue());

            // Set Trim Tool settings.
            SmPreferences.SmTrimTool.setStartTime(((Number)ftxtStartTime.getValue()).doubleValue());
            SmPreferences.SmTrimTool.setStopTime(((Number)ftxtStopTime.getValue()).doubleValue());
            
            SmPreferences.SmTrimTool.setStartTimeMarkerStyle(
                (MarkerStyle)cboxStartTimeMarkerStyle.getSelectedItem());
            SmPreferences.SmTrimTool.setStopTimeMarkerStyle(
                (MarkerStyle)cboxStopTimeMarkerStyle.getSelectedItem());
            
            SmPreferences.SmTrimTool.setStartTimeMarkerColor(txtStartTimeMarkerColor.getBackground().getRGB());
            SmPreferences.SmTrimTool.setStopTimeMarkerColor(txtStopTimeMarkerColor.getBackground().getRGB());
            
            SmPreferences.SmTrimTool.setStartTimeMarkerWidth(
                ((Number)spinnerStartTimeMarkerWidth.getValue()).doubleValue());
            SmPreferences.SmTrimTool.setStopTimeMarkerWidth(
                ((Number)spinnerStopTimeMarkerWidth.getValue()).doubleValue());
            
            SmPreferences.SmTrimTool.setDateTimeEqualTextColor(txtDateTimeEqualTextColor.getBackground().getRGB());
            SmPreferences.SmTrimTool.setDateTimeUnequalTextColor(txtDateTimeUnequalTextColor.getBackground().getRGB());
            
            // Set chart option settings.
            SmPreferences.ChartOptions.setChartSizeSingleWidth(Integer.parseInt(txtChartSizeSingleWidth.getText()));
            SmPreferences.ChartOptions.setChartSizeSingleHeight(Integer.parseInt(txtChartSizeSingleHeight.getText()));
            SmPreferences.ChartOptions.setChartSizeGroupWidth(Integer.parseInt(txtChartSizeGroupWidth.getText()));
            SmPreferences.ChartOptions.setChartSizeGroupHeight(Integer.parseInt(txtChartSizeGroupHeight.getText()));
            SmPreferences.ChartOptions.setPlotAreaPositionLeft(Double.parseDouble(txtPlotAreaPositionLeft.getText()));
            SmPreferences.ChartOptions.setPlotAreaPositionTop(Double.parseDouble(txtPlotAreaPositionTop.getText()));
            SmPreferences.ChartOptions.setPlotAreaPositionRight(Double.parseDouble(txtPlotAreaPositionRight.getText()));
            SmPreferences.ChartOptions.setPlotAreaPositionBottom(Double.parseDouble(txtPlotAreaPositionBottom.getText()));
            SmPreferences.ChartOptions.setColorForeground(txtColorForeground.getBackground().getRGB());
            SmPreferences.ChartOptions.setColorBackground(txtColorBackground.getBackground().getRGB());
            SmPreferences.ChartOptions.setColorPlot(txtColorPlot.getBackground().getRGB());
            SmPreferences.ChartOptions.setFontName(StyleConstants.getFontFamily(fontAttributes));
            SmPreferences.ChartOptions.setFontSize(StyleConstants.getFontSize(fontAttributes));
            SmPreferences.ChartOptions.setFontIsBold(StyleConstants.isBold(fontAttributes));
            SmPreferences.ChartOptions.setFontIsItalic(StyleConstants.isItalic(fontAttributes));
//            SmPreferences.ChartOptions.setFontColor((int)fontAttributes.getAttribute("FontColor"));
            SmPreferences.ChartOptions.setDisplayXAxisTitle(chkboxDisplayXAxisTitle.isSelected());
            SmPreferences.ChartOptions.setDisplayYAxisTitle(chkboxDisplayYAxisTitle.isSelected());
            SmPreferences.ChartOptions.setDisplayXAxisLabels(chkboxDisplayXAxisLabels.isSelected());
            SmPreferences.ChartOptions.setDisplayYAxisLabels(chkboxDisplayYAxisLabels.isSelected());
            SmPreferences.ChartOptions.setDisplayXGrid(chkboxDisplayXGrid.isSelected());
            SmPreferences.ChartOptions.setDisplayYGrid(chkboxDisplayYGrid.isSelected());
            SmPreferences.ChartOptions.setDisplayLegend(chkboxDisplayLegend.isSelected());
            SmPreferences.ChartOptions.setDisplayPlotLabels(chkboxDisplayPlotLabels.isSelected());
            SmPreferences.ChartOptions.setDisplayPlotAnnotation(chkboxDisplayPlotAnnotation.isSelected());

            returnVal = true;
            this.setVisible(false);
        }
        catch (NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(this,
                ex.getMessage(),
                "Preferences",
                JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void editFont()
    {
        // TODO add your handling code here:
        FontChooserDialog fontChooser = new FontChooserDialog(this,fontAttributes);
        fontChooser.setVisible(true);
        
        if (fontChooser.getFontAttributes() != null)
        {
            fontAttributes = fontChooser.getFontAttributes();
            
            String name = StyleConstants.getFontFamily(fontAttributes);
            boolean bold = StyleConstants.isBold(fontAttributes);
            boolean ital = StyleConstants.isItalic(fontAttributes);
            int size = StyleConstants.getFontSize(fontAttributes);

            //Bold and italic donâ€™t work properly in beta 4.
            Font f = new Font(name, (bold ? Font.BOLD : 0) +
                (ital ? Font.ITALIC : 0), size);
            
            String fontStyle = f.getName() + " " + f.getSize() + " ";
            
            if (f.isBold() && f.isItalic())
                fontStyle += "Bold Italic";
            else if (f.isBold())
                fontStyle += "Bold";
            else if (f.isItalic())
                fontStyle += "Italic";
            else
                fontStyle += "Plain";
            
//            lblFont.setFont(f);
            lblFont.setText(fontStyle);
//            lblFont.setForeground(new Color((int)fontAttributes.getAttribute("FontColor")));
        }
        
//        if (fontChooser.getNewFont() != null) {
//            Font f = fontChooser.getNewFont();
//            
//            String fontStyle = f.getName() + " " + f.getSize() + " ";
//            
//            if (f.isBold() && f.isItalic())
//                fontStyle += "Bold Italic";
//            else if (f.isBold())
//                fontStyle += "Bold";
//            else if (f.isItalic())
//                fontStyle += "Italic";
//            else
//                fontStyle += "Plain";
//            
//            lblFont.setFont(f);
//            lblFont.setText(fontStyle);
//        }
//        
//        if (fontChooser.getNewColor() != null)
//            lblFont.setForeground(fontChooser.getNewColor());
    }
    
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        updateSettings();
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        returnVal = false;
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnEventsRootDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEventsRootDirActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        String eventsRootDir = SmPreferences.General.getEventsRootDir();
        if (!eventsRootDir.isEmpty())
            fileChooser.setCurrentDirectory(new File(eventsRootDir));
        
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) 
            txtEventsRootDir.setText(fileChooser.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_btnEventsRootDirActionPerformed

    private void btnTemplatesRootDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTemplatesRootDirActionPerformed
        
        try {
            WindowManager wm = WindowManager.getDefault();
            
            SmTemplateSettingsDialog dialog = new SmTemplateSettingsDialog(wm.getMainWindow(),true);
            
            if (dialog.showDialog()) {
                txtTemplatesRootDir.setText(dialog.getTemplatesRootDir());
                txtStationFolderName.setText(dialog.getStation());
                txtTemplate.setText(dialog.getTemplate());
            }
        }
        catch (Exception ex) {
            SmCore.addMsgToStatusViewer("Error: " + ex.getMessage());
        }
        
        /*
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        String templatesDir = SmPreferences.General.getTemplatesRootDir();
        if (!templatesDir.isEmpty())
            fileChooser.setCurrentDirectory(new File(templatesDir));
        
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) 
            txtTemplatesRootDir.setText(fileChooser.getSelectedFile().getAbsolutePath());
        */
    }//GEN-LAST:event_btnTemplatesRootDirActionPerformed

    private void btnFontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFontActionPerformed
        editFont();
    }//GEN-LAST:event_btnFontActionPerformed

    private void lblFontMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFontMouseClicked
        editFont();
    }//GEN-LAST:event_lblFontMouseClicked

    private void btnTrashDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrashDirActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        String trashDir = SmPreferences.General.getTrashDir();
        if (!trashDir.isEmpty())
            fileChooser.setCurrentDirectory(new File(trashDir));
        
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) 
            txtTrashDir.setText(fileChooser.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_btnTrashDirActionPerformed

    private void btnLogsDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogsDirActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        String logsDir = SmPreferences.General.getLogsDir();
        if (!logsDir.isEmpty())
            fileChooser.setCurrentDirectory(new File(logsDir));
        
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) 
            txtLogsDir.setText(fileChooser.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_btnLogsDirActionPerformed

    private class ColorButtonMouseListener extends MouseAdapter {
        @Override
        public void mouseClicked(MouseEvent evt) {
            if (evt.getSource() instanceof JTextField) {
            JTextField field = (JTextField)evt.getSource();
            Color newColor = JColorChooser.showDialog(
                null,"Choose Color",field.getBackground());
            if (newColor != null)
                field.setBackground(newColor);
        }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEventsRootDir;
    private javax.swing.JButton btnFont;
    private javax.swing.JButton btnLogsDir;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnTemplatesRootDir;
    private javax.swing.JButton btnTrashDir;
    private javax.swing.JComboBox cboxApplicationRangeStartMarkerStyle;
    private javax.swing.JComboBox cboxApplicationRangeStopMarkerStyle;
    private javax.swing.JComboBox cboxBaselineFunctionStyle;
    private javax.swing.JComboBox cboxButterworthFilterOrder;
    private javax.swing.JComboBox<String> cboxDifferentialOrder;
    private javax.swing.JComboBox cboxEventOnsetMarkerStyle;
    private javax.swing.JComboBox cboxFilterRangeHighMarkerStyle;
    private javax.swing.JComboBox cboxFilterRangeLowMarkerStyle;
    private javax.swing.JComboBox cboxFunctionRangeStartMarkerStyle;
    private javax.swing.JComboBox cboxFunctionRangeStopMarkerStyle;
    private javax.swing.JComboBox cboxStartTimeMarkerStyle;
    private javax.swing.JComboBox cboxStopTimeMarkerStyle;
    private javax.swing.JCheckBox chkboxDisplayLegend;
    private javax.swing.JCheckBox chkboxDisplayPlotAnnotation;
    private javax.swing.JCheckBox chkboxDisplayPlotLabels;
    private javax.swing.JCheckBox chkboxDisplayXAxisLabels;
    private javax.swing.JCheckBox chkboxDisplayXAxisTitle;
    private javax.swing.JCheckBox chkboxDisplayXGrid;
    private javax.swing.JCheckBox chkboxDisplayYAxisLabels;
    private javax.swing.JCheckBox chkboxDisplayYAxisTitle;
    private javax.swing.JCheckBox chkboxDisplayYGrid;
    private javax.swing.JFormattedTextField ftxtApplicationRangeStart;
    private javax.swing.JFormattedTextField ftxtApplicationRangeStop;
    private javax.swing.JFormattedTextField ftxtEventOnset;
    private javax.swing.JFormattedTextField ftxtFunctionRangeStart;
    private javax.swing.JFormattedTextField ftxtFunctionRangeStop;
    private javax.swing.JFormattedTextField ftxtSeismicFilterRangeHigh;
    private javax.swing.JFormattedTextField ftxtSeismicFilterRangeLow;
    private javax.swing.JFormattedTextField ftxtSpectralFilterRangeHigh;
    private javax.swing.JFormattedTextField ftxtSpectralFilterRangeLow;
    private javax.swing.JFormattedTextField ftxtStartTime;
    private javax.swing.JFormattedTextField ftxtStopTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblApplicationRangeStart;
    private javax.swing.JLabel lblApplicationRangeStartMarkerColor;
    private javax.swing.JLabel lblApplicationRangeStartMarkerStyle;
    private javax.swing.JLabel lblApplicationRangeStartMarkerWidth;
    private javax.swing.JLabel lblApplicationRangeStop;
    private javax.swing.JLabel lblApplicationRangeStopMarkerColor;
    private javax.swing.JLabel lblApplicationRangeStopMarkerStyle;
    private javax.swing.JLabel lblApplicationRangeStopMarkerWidth;
    private javax.swing.JLabel lblBaselineFunction;
    private javax.swing.JLabel lblBaselineFunctionColor;
    private javax.swing.JLabel lblBaselineFunctionStyle;
    private javax.swing.JLabel lblBaselineFunctionWidth;
    private javax.swing.JLabel lblButterworthFilterOrder;
    private javax.swing.JLabel lblButterworthFilterTaperLength;
    private javax.swing.JLabel lblChartSizeGroupHeight;
    private javax.swing.JLabel lblChartSizeGroupWidth;
    private javax.swing.JLabel lblChartSizeSingleHeight;
    private javax.swing.JLabel lblChartSizeSingleWidth;
    private javax.swing.JLabel lblColorBackground;
    private javax.swing.JLabel lblColorPlot;
    private javax.swing.JLabel lblDateTimeEqualTextColor;
    private javax.swing.JLabel lblDateTimeUnequalTextColor;
    private javax.swing.JLabel lblDifferentialOrder;
    private javax.swing.JLabel lblEventOnset;
    private javax.swing.JLabel lblEventOnsetMarkerColor;
    private javax.swing.JLabel lblEventOnsetMarkerStyle;
    private javax.swing.JLabel lblEventOnsetMarkerWidth;
    private javax.swing.JLabel lblEventsRootDir;
    private javax.swing.JLabel lblFilterRangeHighMarkerColor;
    private javax.swing.JLabel lblFilterRangeHighMarkerStyle;
    private javax.swing.JLabel lblFilterRangeHighMarkerWidth;
    private javax.swing.JLabel lblFilterRangeLowMarkerColor;
    private javax.swing.JLabel lblFilterRangeLowMarkerStyle;
    private javax.swing.JLabel lblFilterRangeLowMarkerWidth;
    private javax.swing.JLabel lblFont;
    private javax.swing.JLabel lblForegroundColor;
    private javax.swing.JLabel lblFunctionRangeStart;
    private javax.swing.JLabel lblFunctionRangeStartMarkerColor;
    private javax.swing.JLabel lblFunctionRangeStartMarkerStyle;
    private javax.swing.JLabel lblFunctionRangeStartMarkerWidth;
    private javax.swing.JLabel lblFunctionRangeStop;
    private javax.swing.JLabel lblFunctionRangeStopMarkerColor;
    private javax.swing.JLabel lblFunctionRangeStopMarkerStyle;
    private javax.swing.JLabel lblFunctionRangeStopMarkerWidth;
    private javax.swing.JLabel lblLogsDir;
    private javax.swing.JLabel lblSeismicFilterRangeHigh;
    private javax.swing.JLabel lblSeismicFunctionRangeLow;
    private javax.swing.JLabel lblSpectralFilterRangeHigh;
    private javax.swing.JLabel lblSpectralFilterRangeLow;
    private javax.swing.JLabel lblStartTime;
    private javax.swing.JLabel lblStartTimeMarkerColor;
    private javax.swing.JLabel lblStartTimeMarkerStyle;
    private javax.swing.JLabel lblStartTimeMarkerWidth;
    private javax.swing.JLabel lblStopTime;
    private javax.swing.JLabel lblStopTimeMarkerColor;
    private javax.swing.JLabel lblStopTimeMarkerStyle;
    private javax.swing.JLabel lblStopTimeMarkerWidth;
    private javax.swing.JLabel lblStrongMotionThresholdPcnt;
    private javax.swing.JLabel lblTemplate;
    private javax.swing.JLabel lblTemplatesRootDir;
    private javax.swing.JLabel lblTrashDir;
    private javax.swing.JPanel pnlApplicationRange;
    private javax.swing.JPanel pnlChartOptions;
    private javax.swing.JPanel pnlChartSize;
    private javax.swing.JPanel pnlChartSizeGroup;
    private javax.swing.JPanel pnlChartSizeSingle;
    private javax.swing.JPanel pnlColorScheme;
    private javax.swing.JPanel pnlEvent;
    private javax.swing.JPanel pnlFilterRange;
    private javax.swing.JPanel pnlFont;
    private javax.swing.JPanel pnlFunctionRange;
    private javax.swing.JPanel pnlGeneral;
    private javax.swing.JPanel pnlPlotAreaPosition;
    private javax.swing.JPanel pnlPrismParams;
    private javax.swing.JPanel pnlSeismicFilterRange;
    private javax.swing.JPanel pnlSmSeismicChartEditor;
    private javax.swing.JPanel pnlSmSpectralChartEditor;
    private javax.swing.JPanel pnlSmTrimTool;
    private javax.swing.JSpinner spinnerApplicationRangeStartMarkerWidth;
    private javax.swing.JSpinner spinnerApplicationRangeStopMarkerWidth;
    private javax.swing.JSpinner spinnerBaselineFunctionWidth;
    private javax.swing.JSpinner spinnerEventOnsetMarkerWidth;
    private javax.swing.JSpinner spinnerFilterRangeHighMarkerWidth;
    private javax.swing.JSpinner spinnerFilterRangeLowMarkerWidth;
    private javax.swing.JSpinner spinnerFunctionRangeStartMarkerWidth;
    private javax.swing.JSpinner spinnerFunctionRangeStopMarkerWidth;
    private javax.swing.JSpinner spinnerStartTimeMarkerWidth;
    private javax.swing.JSpinner spinnerStopTimeMarkerWidth;
    private javax.swing.JTextField txtApplicationRangeStartMarkerColor;
    private javax.swing.JTextField txtApplicationRangeStopMarkerColor;
    private javax.swing.JTextField txtBaselineFunctionColor;
    private javax.swing.JTextField txtButterworthFilterTaperLength;
    private javax.swing.JTextField txtChartSizeGroupHeight;
    private javax.swing.JTextField txtChartSizeGroupWidth;
    private javax.swing.JTextField txtChartSizeSingleHeight;
    private javax.swing.JTextField txtChartSizeSingleWidth;
    private javax.swing.JTextField txtColorBackground;
    private javax.swing.JTextField txtColorForeground;
    private javax.swing.JTextField txtColorPlot;
    private javax.swing.JTextField txtDateTimeEqualTextColor;
    private javax.swing.JTextField txtDateTimeUnequalTextColor;
    private javax.swing.JTextField txtEventOnsetMarkerColor;
    private javax.swing.JTextField txtEventsRootDir;
    private javax.swing.JTextField txtFilterRangeHighMarkerColor;
    private javax.swing.JTextField txtFilterRangeLowMarkerColor;
    private javax.swing.JTextField txtFunctionRangeStartMarkerColor;
    private javax.swing.JTextField txtFunctionRangeStopMarkerColor;
    private javax.swing.JTextField txtLogsDir;
    private javax.swing.JTextField txtPlotAreaPositionBottom;
    private javax.swing.JTextField txtPlotAreaPositionLeft;
    private javax.swing.JTextField txtPlotAreaPositionRight;
    private javax.swing.JTextField txtPlotAreaPositionTop;
    private javax.swing.JTextField txtStartTimeMarkerColor;
    private javax.swing.JTextField txtStationFolderName;
    private javax.swing.JTextField txtStopTimeMarkerColor;
    private javax.swing.JTextField txtStrongMotionThresholdPcnt;
    private javax.swing.JTextField txtTemplate;
    private javax.swing.JTextField txtTemplatesRootDir;
    private javax.swing.JTextField txtTrashDir;
    // End of variables declaration//GEN-END:variables
}
